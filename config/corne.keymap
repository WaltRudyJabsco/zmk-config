/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 600  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>


/ {  
        chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp ESC>;
        };
//combo_tab {
  //          timeout-ms = <50>;
    //        key-positions = <LCTRL LALT>;
      //      bindings = <&kp TAB>;
 //       };
combo_SQT {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp SQT>;
        };
combo_tilde {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp GRAVE>;
        };
    };


        keymap {
                compatible = "zmk,keymap";

        default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//                    | LG DEL | RET numlayer | TAB |   | DEL | SPACE arrows | mouselayer |
                        bindings = <
 &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    
   &mt LCTRL A &mt LALT S &mt LSHFT D &mt LGUI F &kp G   &kp H &mt RGUI J &mt RSHFT K  &mt RALT L   &mt RCTRL SEMI 
 &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH 
                  &kp LG(BSPC) &lt 1 ENTER &kp TAB   &kp BSPC &lt 2 SPACE &mo 3
                        >;
                };

        num_media_layer {
// -----------------------------------------------------------------------------------------
// |  1 |  2  |  3  |  4  |  5   |   |  6  |  7  |  8  |  9  |  0  |
// |     |     |     |     |   TAB  |   | TAB |     |     |     |     ||
// |  mute  |  vol-  |  vol+  |  play  |  next  |   |  -  |  =  |  [  |  ]  |  \  |
//                    | GUI | RET | TAB |   | DEL | SPACE  | ALT |
                        bindings = <
   &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0    
  &trans       &trans       &trans       &trans       &kp TAB         &kp TAB   &trans   &trans &trans    &trans 
   &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_PP &kp C_NEXT   &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH 
                  &trans &trans &trans   &trans &trans &trans
                        >;
                };

        arrow_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |   TAB  |   | TAB  LFT | DWN |  UP | RGT 
// |  home  |  pgup  |  pgdn  |  end  |    |  |  _  |  +  |  {  |  }  | "|" |
//                    | GUI | RET | TAB |   | DEL | SPACE  | ALT |
                        bindings = <
  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR    
  &trans       &trans       &trans       &trans       &kp TAB         &kp TAB   &kp LEFT &kp DOWN &kp UP &kp RIGHT 
   &kp HOME &kp PG_UP &kp PG_DN &kp END &trans   &kp RS(MINUS) &kp RS(EQUAL) &kp RS(LBKT)  &kp RS(RBKT) &kp RS(BSLH) 
                  &trans &trans &trans   &trans &trans &trans
                        >;
                };

        mouse_layer {
// -----------------------------------------------------------------------------------------
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |    |  mouse1  |  mouse3  |  mouse2  |  wheelup  
// |     |     |     |     |    |  TAB | TAB  | mouselft | mousedown | mouseup | mousert
// |    |    |    |    |    |  |  _  |  +  |  {  |  }  | wheeldn|
//                    | GUI | RET | TAB |   | DEL | SPACE  | ALT |
                        bindings = <
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3          &trans   &mkp MB1   &mkp MB3 &mkp MB2     &msc SCRL_UP    
  &trans       &trans       &trans       &trans       &kp TAB         &kp TAB   &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT 
   &trans  &trans  &trans  &trans  &trans       &kp LG(LBKT) &kp LC(RS(TAB)) &kp LC(TAB)  &kp F &msc SCRL_DOWN 
                  &trans &trans &trans   &trans &trans &trans
                        >;
                };

//mouse_layer {
// -----------------------------------------------------------------------------------------
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |    |  mouse1  |  mouse3  |  mouse2  |  wheelup  
// |     |     |     |     |    |  TAB | TAB  | mouselft | mousedown | mouseup | mousert
// |  rgbonoff  |   rgbmode |  hueup  |  huedn  |  next  |  |  _  |  +  |  {  |  }  | wheeldn|
//                    | GUI | RET | TAB |   | DEL | SPACE  | ALT |
 //                       bindings = <
 // &none &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4          &trans   &mkp MB1   &mkp MB3 &mkp MB2     &msc SCRL_UP &none   
// &none &trans       &trans       &trans       &trans       &kp TAB         &kp TAB   &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &none
// &none  &rgb_ug RGB_TOG &rgb_ug RGB_EFF &rgb_ug RGB_EFF &rgb_ug RGB_EFR &trans       &kp LG(LBKT) &kp LC(RS(TAB)) &kp LC(TAB)  &kp F &msc SCRL_DOWN &none
//                  &trans &trans &trans   &trans &trans &mo 3
  //                      >;
 //               };


//               original_default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
//                        bindings = <
//   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
//   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
//   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
//                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
//                        >;
//                };


//
//             original_lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
//                        bindings = <
//  &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
//   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
//   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
//                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
//                        >;
//                };
//
//                original_raise_layer {
//  -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
//                       bindings = <
//   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
//  &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
//  &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
//                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
//                        >;
//                };
        };
};
